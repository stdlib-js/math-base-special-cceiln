{"version":3,"file":"index.mjs","sources":["../lib/cceiln.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ceiln from '@stdlib/math-base-special-ceiln';\n\n\n// MAIN //\n\n/**\n* Rounds a complex number to the nearest multiple of `10^n` toward positive infinity.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @param {integer} n - integer power of 10\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = cceiln( out, -3.141592653589793, 3.141592653589793, -2 );\n* // returns [ -3.14, 3.15 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = cceiln( out, 9.99999, 0.1, 0 );\n* // returns [ 10.0, 1.0 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = cceiln( out, 0.0, 0.0, -2 );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = cceiln( out, NaN, NaN, -2 );\n* // returns [ NaN, NaN ]\n*/\nfunction cceiln( out, re, im, n ) {\n\tout[ 0 ] = ceiln( re, n );\n\tout[ 1 ] = ceiln( im, n );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default cceiln;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ceiln from './cceiln.js';\n\n\n// MAIN //\n\n/**\n* Rounds a complex number to the nearest multiple of `10^n` toward positive infinity.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @param {integer} n - integer power of 10\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var v = cceiln( -3.141592653589793, 3.141592653589793, -2 );\n* // returns [ -3.14, 3.15 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n*\n* var v = cceiln( out, 9.99999, 0.1, 0 );\n* // returns [ 10.0, 1.0 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var v = cceiln( 0.0, 0.0, -2 );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var v = cceiln( NaN, NaN, -2 );\n* // returns [ NaN, NaN ]\n*/\nfunction cceiln( out, re, im, n ) {\n\tif ( arguments.length === 3 ) {\n\t\treturn ceiln( [ 0.0, 0.0 ], out, re, im );\n\t}\n\treturn ceiln( out, re, im, n );\n}\n\n\n// EXPORTS //\n\nexport default cceiln;\n"],"names":["cceiln","out","re","im","n","ceiln","arguments","length"],"mappings":";;2FAyDA,SAASA,EAAQC,EAAKC,EAAIC,EAAIC,GAG7B,OAFAH,EAAK,GAAMI,EAAOH,EAAIE,GACtBH,EAAK,GAAMI,EAAOF,EAAIC,GACfH,CACR,CCJA,SAASD,EAAQC,EAAKC,EAAIC,EAAIC,GAC7B,OAA0B,IAArBE,UAAUC,OACPF,EAAO,CAAE,EAAK,GAAOJ,EAAKC,EAAIC,GAE/BE,EAAOJ,EAAKC,EAAIC,EAAIC,EAC5B"}